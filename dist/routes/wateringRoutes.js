"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const wateringController_1 = require("../controllers/wateringController");
const auth_1 = require("../middleware/auth");
const wateringValidation_1 = require("../middleware/wateringValidation");
const rateLimiter_1 = require("../middleware/rateLimiter");
const router = (0, express_1.Router)();
const wateringController = new wateringController_1.WateringController();
router.use(auth_1.authenticateJWT);
router.use(rateLimiter_1.rateLimiters.public);
router.post("/create-schedule", wateringValidation_1.validateWateringSchedule, wateringController.createSchedule);
router.put("/update-schedule/:id", wateringValidation_1.validateWateringSchedule, wateringController.updateSchedule);
router.put("/mark-completed/:id", wateringValidation_1.validateScheduleUpdate, wateringController.updateSchedule);
router.put("/skip-schedule/:id", wateringValidation_1.validateScheduleUpdate, wateringController.updateSchedule);
router.get("/schedules", wateringValidation_1.validateScheduleQuery, wateringController.getSchedules);
router.get("/schedule/:id", wateringController.getScheduleById);
router.get("/today-schedule", wateringController.getSchedules);
router.get("/weekly-schedule", wateringController.getSchedules);
router.get("/monthly-schedule", wateringController.getSchedules);
router.get("/get-recommendation", wateringController.getSchedules);
router.post("/calculate-water-need", wateringValidation_1.validateWateringSchedule, wateringController.createSchedule);
router.delete("/delete-schedule/:id", wateringController.deleteSchedule);
router.get("/all-farm-schedules", (0, auth_1.authorizeRoles)("admin"), wateringValidation_1.validateScheduleQuery, wateringController.getSchedules);
router.get("/farm-analytics", (0, auth_1.authorizeRoles)("admin"), wateringController.getSchedules);
router.get("/weather-forecast", wateringController.getSchedules);
router.post("/update-weather-data", wateringValidation_1.validateWateringSchedule, wateringController.updateSchedule);
router.get("/soil-moisture-status", wateringController.getSchedules);
router.post("/update-soil-data", wateringValidation_1.validateWateringSchedule, wateringController.updateSchedule);
router.get("/watering-history", wateringValidation_1.validateScheduleQuery, wateringController.getSchedules);
router.get("/generate-report", wateringValidation_1.validateScheduleQuery, wateringController.getSchedules);
router.post("/update-notification-settings", wateringValidation_1.validateScheduleUpdate, wateringController.updateSchedule);
exports.default = router;
//# sourceMappingURL=wateringRoutes.js.map